(()=>{"use strict";class t{static EDIT="e";constructor(t){this.up=this.down=this.left=this.right=this.shoot=!1,this.edit=!1,this.onReleaseHooks={},this.mousePos={x:null,y:null},this.mouseButtonHeld=!1;const e=this;document.addEventListener("keydown",(t=>e.keyPress(t))),document.addEventListener("keyup",(t=>e.keyRelease(t))),t.addEventListener("mousemove",(t=>e.updateMousePos(t))),t.addEventListener("mousedown",(t=>{e.mouseButtonHeld=!0})),t.addEventListener("mouseup",(t=>{e.mouseButtonHeld=!1}))}flipInputState(t,e){switch(t){case" ":this.shoot=e;break;case"ArrowLeft":this.left=e;break;case"ArrowRight":this.right=e;break;case"ArrowUp":this.up=e;break;case"ArrowDown":this.down=e;break;case"e":this.edit=e}}keyPress(t){t.defaultPrevented||t.repeat||"F12"!=t.key&&(t.preventDefault(),this.flipInputState(t.key,!0))}keyRelease(t){if(!t.defaultPrevented&&"F12"!=t.key){t.preventDefault(),this.flipInputState(t.key,!1);for(const e of this.onReleaseHooks[t.key]||[])e(t)}}onRelease(t,e){void 0===this.onReleaseHooks[t]?this.onReleaseHooks[t]=[e]:this.onReleaseHooks[t].push(e)}updateMousePos(t){const e=t.target.getBoundingClientRect(),s=t.target.width/e.width,i=t.target.height/e.height,h=document.documentElement;this.mousePos.x=s*(t.clientX-e.left-h.scrollLeft),this.mousePos.y=i*(t.clientY-e.top-h.scrollTop)}}const e={TIME_SLOT:250,VIEWABLE_WIDTH:426,VIEWABLE_HEIGHT:240,PLAYABLE_WIDTH:800};Object.freeze(e);class s{static#t=[];static get(t,e,i,h,a,o){const n=s.#t.filter((t=>!t.live));if(n.length)return n[0].recycle(t,e,i,h,a,o);{const n=new s(t,e,i,h,a,o);return s.#t.push(n),n}}static alive=function*(){for(const t of this.#t)t.live&&(yield t)};constructor(t,e,s,i,h,a){this.#e(t,e,s,i,h,a)}update(t){this.position.x+=this.velocity.x*t,this.position.y+=this.velocity.y*t,this.reachedTarget=this.velocity.y>0?this.position.y>this.target.y+this.target.height:this.position.y<this.target.y,this.reachedTarget&&(this.live=!1,this.hooks.forEach((e=>e(t,this))))}#e(t,e,s,i,h,a){return this.position=s,this.radius=e,this.target=i,this.velocity={x:t*(this.target.x-this.position.x),y:t*(this.target.y-this.position.y)},this.hooks=a,this.live=!0,this.reachedTarget=!1,this}recycle(t,e,s,i,h,a){return this.#e(t,e,s,i,h,a),this}draw(t,e,s){t.strokeStyle="yellow",t.beginPath();const i={x:this.reachedTarget?this.target.x:this.position.x,y:this.reachedTarget?this.target.y:this.position.y};t.arc(Math.round(i.x-s),Math.round(i.y),Math.round(this.radius),0,2*Math.PI),t.stroke()}}class i{static#t=[];static alive=function*(){for(const t of this.#t)t.live&&(yield t)};static spawn(t,e,s,h){let a=this.#t.filter((t=>!t.live)).pop();return void 0===a?(a=new i(t,e,s,h),this.#t.push(a),console.log("Created new enemy",a)):(a.init(t,e,s,h),console.log("Recycled enemy",a)),a}constructor(t,e,s,i){this.init(t,e,s,i)}init(t,e,s,i){this.imageSpec=s,this.live=!0,this.startX=this.x=t,this.y=e,this.width=32,this.height=32,this.endX=i,this.speed=64,this.velX=Math.sign(this.endX-this.startX)*this.speed,this.endXTime=(this.endX-this.startX)/this.velX,this.endAttackTime=this.endXTime+2,this.attacked=!1,this.hitTargetHooks=[]}update(t,i){if(this.live)if(t<this.endXTime)this.x=this.startX+this.velX*t;else if(t<this.endAttackTime){if(this.x=this.startX+this.velX*this.endXTime,!this.attacked&&void 0!==i){const t=s.get(1.5,6,{x:this.x+this.width/2,y:this.y+this.height/2},{x:i.avatarPos.x+1.5*h.avatarWidth,y:i.avatarPos.y,height:h.avatarHeight/2},1,this.hitTargetHooks);console.log("SHOT",t),this.attacked=!0}}else this.x=this.endX-this.velX*(t-this.endAttackTime),(this.x+this.width<0||this.x>e.PLAYABLE_WIDTH)&&(this.live=!1)}draw(t,e,s){t.drawImage(e[this.imageSpec.id],this.imageSpec.sx,this.imageSpec.sy,this.imageSpec.sWidth,this.imageSpec.sHeight,Math.round(this.x-s),Math.round(this.y),this.width,this.height)}}class h{static avatarHeight=32;static avatarWidth=8;static reticleSpeed=270;static avatarSpeed=120;static timeBetweenShots=1/9;static getAxis=function(t,e,s,i){let h={x:0,y:0};return t?h.y+=-1:e&&(h.y+=1),s?h.x+=-1:i&&(h.x+=1),h};static clampNorm=function(t,e){const s=Math.sqrt(Math.pow(t.x,2)+Math.pow(t.y,2)),i=Math.min(s,e)/s;return{x:i*t.x,y:i*t.y}};static onHitTarget=function(t,e){for(const t of i.alive())Math.sqrt(Math.pow(t.x+t.width/2-e.target.x,2)+Math.pow(t.y+t.height/2-e.target.y,2))<=16&&(t.live=!1)};constructor(t){this.avatarPos={x:100,y:t.y},this.reticlePos={x:t.x+4,y:t.y-100},this.shots=[],this.shotDelay=0,this.hitTargetHooks=[h.onHitTarget],this.isShooting=!1}update(t,i,a){this.shots=this.shots.filter((t=>t.live)),i.shoot?this.shotDelay<=0&&(this.isShooting=!0,this.shots.push(s.get(8,h.avatarWidth/2,{x:this.avatarPos.x+h.avatarWidth/2,y:this.avatarPos.y},{x:this.reticlePos.x,y:this.reticlePos.y,height:3},10,this.hitTargetHooks)),this.shotDelay=h.timeBetweenShots):(i.left&&(this.avatarPos.x=Math.max(0,this.avatarPos.x-h.avatarSpeed*t)),i.right&&(this.avatarPos.x=Math.min(a.width-h.avatarWidth,this.avatarPos.x+h.avatarSpeed*t)),this.isShooting=!1),this.shotDelay-=t;const o=h.getAxis(i.up,i.down,i.left,i.right);if(0!==o.x||0!==o.y){const e=h.clampNorm({x:o.x*h.reticleSpeed,y:o.y*h.reticleSpeed},h.reticleSpeed);this.reticlePos.x+=e.x*t,this.reticlePos.y+=e.y*t}const n=this.avatarPos.x-a.offset;n>e.VIEWABLE_WIDTH*(2/3)&&a.scrollRight(t),n<e.VIEWABLE_WIDTH/3&&a.scrollLeft(t),this.reticlePos.x<a.offset+h.avatarWidth/2&&(this.reticlePos.x=a.offset+h.avatarWidth/2),this.reticlePos.x>a.offset+e.VIEWABLE_WIDTH-h.avatarWidth/2&&(this.reticlePos.x=a.offset+e.VIEWABLE_WIDTH-h.avatarWidth/2),this.reticlePos.y<h.avatarWidth/2&&(this.reticlePos.y=h.avatarWidth/2),this.reticlePos.y>e.VIEWABLE_HEIGHT-h.avatarHeight&&(this.reticlePos.y=e.VIEWABLE_HEIGHT-h.avatarHeight)}draw(t,e,s){t.strokeStyle=this.isShooting?"lime":"red",t.beginPath(),t.arc(Math.round(this.reticlePos.x-s),Math.round(this.reticlePos.y),Math.round(h.avatarWidth),0,2*Math.PI),t.stroke(),t.drawImage(e.player,50,0,20,32,Math.round(this.avatarPos.x-s),Math.round(this.avatarPos.y),20,32)}}class a{static#s=0;static#i=0;static#h=256;constructor(t,e,s,i){this.levelData=t,this.width=e,this.offset=0,this.enemies=[],this.player=i}reset(t){a.#s=0,a.#i=0,this.levelData=t,this.offset=0;for(const t of i.alive())t.live=!1}scrollLeft(t){this.offset=Math.max(0,this.offset-a.#h*t)}scrollRight(t){this.offset=Math.min(this.offset+a.#h*t,this.width-e.VIEWABLE_WIDTH)}update(t){a.#s+=t,a.#i+=t;const h=Math.floor(1e3*a.#s/e.TIME_SLOT);if(1e3*a.#i>e.TIME_SLOT){void 0===this.enemies[h-1]&&(this.enemies[h-1]=[]),(this.levelData[h-1]||[]).length&&console.log("Time for a new wave!",h,a.#i,a.#s);for(const t of this.levelData[h-1]||[]){const e=i.spawn(t.x,t.y,t.imageSpec,t.endX);this.enemies[h-1].push(e)}a.#i=0}for(let t=0;t<=h;t++)if(void 0!==this.enemies[t])for(const s of this.enemies[t])s.live&&s.update(a.#s-t*e.TIME_SLOT/1e3,this.player);for(const e of s.alive())e.update(t)}draw(t,e){t.drawImage(e.levelBG,Math.round(this.offset),0,t.canvas.width,t.canvas.height,0,0,t.canvas.width,t.canvas.height);for(const s of i.alive())s.draw(t,e,this.offset);for(const i of s.alive())i.draw(t,e,this.offset)}}class o{constructor(t,e,s,i,h,a,o){this.x=t,this.y=e,this.width=s,this.height=i,this.spriteOffsetX=h,this.spriteOffsetY=a,this.mouseBtnWasHeld=!1,this.flipSprite=o||!1}onClick(t){this.action=t}update(t,e){const s=p(e.mousePos,{x:this.x,y:this.y,width:this.width,height:this.height});s&&!e.mouseButtonHeld&&this.mouseBtnWasHeld&&this.action(),this.mouseBtnWasHeld=s&&e.mouseButtonHeld}draw(t,e){if(this.flipSprite?(t.translate(this.x+this.width,this.y),t.scale(-1,1),t.drawImage(e.editorUI,this.spriteOffsetX,this.spriteOffsetY,this.width,this.height,0,0,this.width,this.height),t.setTransform(1,0,0,1,0,0)):t.drawImage(e.editorUI,this.spriteOffsetX,this.spriteOffsetY,this.width,this.height,this.x,this.y,this.width,this.height),this.mouseBtnWasHeld){const e=t.globalAlpha;t.globalAlpha=.3,t.fillStyle="white",t.fillRect(this.x+1,this.y+1,this.width-2,this.height-2),t.globalAlpha=e}}}class n extends o{static WIDTH=17;static HEIGHT=17;constructor(t,e,s,i,h){super(Math.floor(i/2)*n.WIDTH,i%2*n.HEIGHT+h,n.WIDTH,n.HEIGHT,e,s,!1),this.editor=t,this.order=i}action(){console.log("CLICKED",this)}}class r extends n{constructor(t,e,s){super(t,0,0,e,s)}action(){this.editor.toggle()}}class d extends n{constructor(t,e,s){super(t,n.WIDTH,0,e,s)}}class l extends n{constructor(t,e,s){super(t,2*n.WIDTH,0,e,s)}}class c extends n{constructor(t,e,s){super(t,3*n.WIDTH,0,e,s)}action(){this.editor.undo()}}class g extends n{constructor(t,e,s){super(t,0,n.HEIGHT,e,s)}}class m extends n{constructor(t,e,s){super(t,n.WIDTH,n.HEIGHT,e,s)}}class u extends n{constructor(t,e,s){super(t,2*n.WIDTH,n.HEIGHT,e,s)}action(){this.editor.deleteSelected()}}class y extends n{constructor(t,e,s){super(t,3*n.WIDTH,n.HEIGHT,e,s)}}class f{static buttonSpecs=[r,g,d,m,l,u,c,y];static WP_HANDLE_SIZE=8;static WING_WIDTH=64;constructor(){this.enabled=!0,this.components={timeSlider:new E(this),enemyPalette:new I(this,n.WIDTH*f.buttonSpecs.length/2,184+E.HEIGHT),stageSlider:new x(this)};const t=this.components.timeSlider.y+E.HEIGHT,s=this;this.buttons=f.buttonSpecs.map(((e,i)=>new e(s,i,t))),this.dragObj={},this.dragWP={},this.isDragging=!1,this.isDraggingWP=!1,this.data=Array(Math.ceil(E.MAX_TIME/e.TIME_SLOT)),this.stageOffset=0,this.dragOffset={x:0,y:0},this.selectedEnemy=null,this.simEnemies=[],this.undoList=[]}scrollRight(t){this.stageOffset+=t,this.stageOffset=Math.min(this.stageOffset,e.PLAYABLE_WIDTH-e.VIEWABLE_WIDTH+f.WING_WIDTH)}scrollLeft(t){this.stageOffset-=t,this.stageOffset=Math.max(this.stageOffset,-f.WING_WIDTH)}update(t,s){const i=s.mousePos.x,h=s.mousePos.y,a=this.getTimeIndex();if(!this.isDragging&&!this.isDraggingWP&&s.mouseButtonHeld&&(h<this.components.timeSlider.y||h>this.components.timeSlider.y+E.HEIGHT))if(i>this.components.enemyPalette.x&&i<this.components.enemyPalette.x+this.components.enemyPalette.width&&h>this.components.enemyPalette.y&&h<this.components.enemyPalette.y+this.components.enemyPalette.height){for(const t of this.components.enemyPalette.enemyBoxes)if(i>t.x&&i<t.x+t.width&&h>t.y&&h<t.y+t.height){this.isDragging=!0,this.dragObj={x:t.x,y:t.y,width:t.enemy.width,height:t.enemy.height,enemy:Object.assign({},t.enemy),new:!0,subindex:this.data[a]?this.data[a].length-1:0},this.dragOffset.x=this.dragObj.x-i,this.dragOffset.y=this.dragObj.y-h;break}}else{const t=this.getEnemiesForTime();for(const[e,s]of t.entries()){const t={x:s.endX?s.endX:s.x+s.width/2-f.WP_HANDLE_SIZE/2,y:s.y+s.height/2-f.WP_HANDLE_SIZE/2,width:f.WP_HANDLE_SIZE,height:f.WP_HANDLE_SIZE};if(p({x:i+this.stageOffset,y:h},t)){this.isDraggingWP=!0,Object.assign(this.dragWP,{index:this.getTimeIndex(),subindex:e,start:{x:s.x+s.width/2-this.stageOffset,y:s.y+s.height/2},end:{x:i-this.stageOffset,y:s.y+s.height/2}});break}if(p({x:i+this.stageOffset,y:h},s)){this.isDragging=!0,Object.assign(this.dragObj,{x:s.x,y:s.y,width:s.width,height:s.height,enemy:s,endX:s.x+this.stageOffset+s.width,subindex:e}),this.dragObj.new=!1,this.dragOffset.x=this.dragObj.x-i-this.stageOffset,this.dragOffset.y=this.dragObj.y-h;break}}}for(const e of Object.values(this.components))e.update(t,s);for(const[e,i]of this.buttons.entries())i.update(t,s);this.isDraggingWP?s.mouseButtonHeld?this.dragWP.end.x=s.mousePos.x:(this.isDraggingWP=!1,this.dragWP.end.x>0&&this.dragWP.end.x<e.VIEWABLE_WIDTH&&this.dropWP()):this.isDragging&&(s.mouseButtonHeld?(this.dragObj.x=s.mousePos.x+this.dragOffset.x+this.stageOffset,this.dragObj.y=s.mousePos.y+this.dragOffset.y):(this.isDragging=!1,this.dragObj.x>-f.WING_WIDTH&&this.dragObj.x+this.dragObj.width<e.PLAYABLE_WIDTH+f.WING_WIDTH&&this.dragObj.y+this.dragObj.height<this.components.timeSlider.y&&this.dropEnemy()))}updateSimEnemies(t){this.simEnemies=[];for(let s=0;s<t;s++){const h=this.data[s];if(void 0===h)continue;const a=(t-s)*e.TIME_SLOT;for(const t of h){const e=i.spawn(t.x,t.y,t.imageSpec,t.endX);e.update(a/1e3),this.simEnemies.push(e)}}}getTimeIndex(){return this.components.timeSlider.sliderPos}addEnemy(t,e){null==e&&(e=this.getTimeIndex()),void 0===this.data[e]&&(this.data[e]=[]),this.data[e].push(t),console.log("DATA UPDATED",this.data,this.undoList)}dropEnemy(){this.undoList.push(this.takeDataSnapshot());const t=this.dragObj.enemy;t.x=this.dragObj.x,t.y=this.dragObj.y;const e=this.getTimeIndex();this.selectedEnemy={enemy:t,index:e,subindex:this.dragObj.subindex},this.dragObj.new&&(this.addEnemy(t,e),Object.assign({},this.selectedEnemy))}dropWP(){this.undoList.push(this.takeDataSnapshot());const t=this.data[this.dragWP.index][this.dragWP.subindex];t.endX=this.dragWP.end.x+this.stageOffset,this.selectedEnemy={enemy:t,index:this.dragWP.index,subindex:this.dragWP.subindex}}takeDataSnapshot(){const t=this.data.map((t=>t.map((t=>({...t})))));return console.log("Took data snapshot",t),t}getEnemiesForTime(){return this.data[this.getTimeIndex()]||[]}drawEnemy(t,e,s){const i=t.imageSpec;e.drawImage(s[i.id],i.sx,i.sy,i.sWidth,i.sHeight,Math.round(t.x-this.stageOffset),Math.round(t.y),t.width,t.height)}draw(t,e){t.drawImage(e.levelBG,this.stageOffset,0,t.canvas.width,t.canvas.height,0,0,t.canvas.width,t.canvas.height);for(const s of Object.values(this.components))s.draw(t,e);for(const s of this.getEnemiesForTime()){this.drawEnemy(s,t,e);const i=s.y+s.height/2;s.endX?(t.strokeStyle="yellow",t.beginPath(),t.moveTo(Math.round(s.x-this.stageOffset+s.width/2),Math.round(s.y+s.height/2)),t.lineTo(Math.round(s.endX-this.stageOffset),Math.round(i)),t.stroke(),t.strokeStyle="cyan",t.strokeRect(Math.round(s.endX-this.stageOffset-f.WP_HANDLE_SIZE/2),Math.round(i-f.WP_HANDLE_SIZE/2),f.WP_HANDLE_SIZE,f.WP_HANDLE_SIZE)):t.strokeRect(Math.round(s.x-this.stageOffset+s.width/2-f.WP_HANDLE_SIZE/2),Math.round(i-f.WP_HANDLE_SIZE/2),f.WP_HANDLE_SIZE,f.WP_HANDLE_SIZE)}const s=this.getTimeIndex(),i=t.globalAlpha;t.globalAlpha=.3;for(const s of this.simEnemies)this.drawEnemy(s,t,e);if(t.globalAlpha=i,this.isDraggingWP&&(t.strokeStyle="red",t.beginPath(),t.moveTo(this.dragWP.start.x,this.dragWP.start.y),t.lineTo(this.dragWP.end.x,this.dragWP.end.y),t.stroke()),this.isDragging){t.fillStyle=this.dragObj.enemy.color;const s=t.globalAlpha;t.globalAlpha=.5,this.drawEnemy(this.dragObj.enemy,t,e),t.globalAlpha=s}for(const[s,i]of this.buttons.entries())i.draw(t,e,this.components.timeSlider.y+E.HEIGHT,s);null!==this.selectedEnemy&&s===this.selectedEnemy.index&&(t.setLineDash([2,3]),t.strokeStyle="lime",t.strokeRect(Math.round(this.selectedEnemy.enemy.x-this.stageOffset),Math.round(this.selectedEnemy.enemy.y),this.selectedEnemy.enemy.width,this.selectedEnemy.enemy.height),t.setLineDash([])),this.isDragging&&(t.setLineDash([2,3]),t.strokeStyle="pink",t.strokeRect(Math.round(this.dragObj.x-this.stageOffset),Math.round(this.dragObj.y),this.dragObj.width,this.dragObj.height),t.setLineDash([]))}toggle(){this.enabled=!this.enabled,this.enabled&&this.updateSimEnemies(this.components.timeSlider.sliderPos)}deleteEnemy(t,e){Array.isArray(this.data[t])&&this.data[t].splice(e,1)}deleteSelected(){null!==this.selectedEnemy&&this.getTimeIndex()===this.selectedEnemy.index&&(this.undoList.push(this.takeDataSnapshot()),this.deleteEnemy(this.selectedEnemy.index,this.selectedEnemy.subindex),this.selectedEnemy=null,console.log("DATA UPDATED",this.data,this.undoList))}undo(){if(this.undoList.length){const t=this.undoList.pop();this.data=t,this.selectedEnemy=null}else console.log("No further undo information")}}function p(t,e){return t.x>e.x&&t.y>e.y&&t.x<e.x+e.width&&t.y<e.y+e.height}class x{static btnSize=11;constructor(t){this.editor=t,this.slidePos=0,this.leftBtn={x:0,y:e.VIEWABLE_HEIGHT-x.btnSize,width:x.btnSize,height:x.btnSize},this.rightBtn={x:e.VIEWABLE_WIDTH-x.btnSize,y:e.VIEWABLE_HEIGHT-x.btnSize,width:x.btnSize,height:x.btnSize},this.mouseHeldOnLeftBtn=!1,this.mouseHeldOnRightBtn=!1}update(t,e){const s=p(e.mousePos,this.leftBtn);s&&!e.mouseButtonHeld&&this.mouseHeldOnLeftBtn&&this.editor.scrollLeft(20),this.mouseHeldOnLeftBtn=s&&e.mouseButtonHeld;const i=p(e.mousePos,this.rightBtn);i&&!e.mouseButtonHeld&&this.mouseHeldOnRightBtn&&this.editor.scrollRight(20),this.mouseHeldOnRightBtn=i&&e.mouseButtonHeld}draw(t,e){const s=t.canvas.height-x.btnSize;t.drawImage(e.editorUI,74,0,x.btnSize,x.btnSize,0,s,x.btnSize,x.btnSize),t.translate(t.canvas.width,s),t.scale(-1,1),t.drawImage(e.editorUI,74,0,x.btnSize,x.btnSize,0,0,x.btnSize,x.btnSize),t.setTransform(1,0,0,1,0,0)}}class E{static SPEED=2;static MAX_TIME=1e5;static HEIGHT=12;static BTN_WIDTH=7;static TIME_STEP=250;constructor(t){this.editor=t,this.sliderPos=0,this.containerY=240-E.HEIGHT,this.y=184,this.isDragging=!1,this.maxPos=(e.VIEWABLE_WIDTH-E.BTN_WIDTH)/2,this.leftBtn=new o(0,this.y,E.BTN_WIDTH,E.HEIGHT,74,20),this.leftBtn.onClick((()=>this.stepLeft())),this.rightBtn=new o(e.VIEWABLE_WIDTH-E.BTN_WIDTH,this.y,E.BTN_WIDTH,E.HEIGHT,74,20,!0),this.rightBtn.onClick((()=>this.stepRight()))}getSelectedTime(){return this.sliderPos*E.TIME_STEP}updateSliderPos(t){this.sliderPos=t,console.log("Changed time slider position",this.sliderPos,"TIME:",this.getSelectedTime()),this.editor.updateSimEnemies(this.sliderPos)}stepLeft(){this.updateSliderPos(Math.max(0,this.sliderPos-1))}stepRight(){this.updateSliderPos(Math.min(this.maxPos,this.sliderPos+1))}screenPosToSliderPos(t){return Math.min(E.MAX_TIME/E.TIME_STEP,Math.max(0,Math.floor((t-E.BTN_WIDTH)/2)))}update(t,s){this.editor.isDragging||(this.leftBtn.update(t,s),this.rightBtn.update(t,s),s.left&&this.stepLeft(),s.right&&this.stepRight(),s.mouseButtonHeld&&s.mousePos.y>=this.y&&s.mousePos.y<=this.y+E.HEIGHT&&s.mousePos.x>E.BTN_WIDTH&&s.mousePos.x<e.VIEWABLE_WIDTH-E.BTN_WIDTH?(this.updateSliderPos(this.screenPosToSliderPos(s.mousePos.x)),this.isDragging=!0):!s.mouseButtonHeld&&this.isDragging&&(this.isDragging=!1,this.updateSliderPos(this.screenPosToSliderPos(s.mousePos.x))))}draw(t,e){this.leftBtn.draw(t,e);for(let s=7;s<t.canvas.width-E.BTN_WIDTH;s+=2)t.drawImage(e.editorUI,81,20,2,E.HEIGHT,s,this.y,2,E.HEIGHT);this.rightBtn.draw(t,e),t.fillStyle="yellow",t.fillRect(Math.floor(2*this.sliderPos)+E.BTN_WIDTH,this.y+2,1,6)}}class I{static margin=4;static boxSize=32;static scrollBtnWidth=6;constructor(t,e,s){this.editor=t,this.x=e,this.y=s,this.containerX=394,this.height=216,this.enemies=[{name:"RASPBERRY_DONUT",width:32,height:32,imageSpec:{id:"donutSheet",sx:0,sy:0,sWidth:32,sHeight:32}},{name:"CHOCO_DONUT",width:32,height:32,imageSpec:{id:"donutSheet",sx:0,sy:32,sWidth:32,sHeight:32}},{name:"FROSTED_DONUT",width:32,height:32,imageSpec:{id:"donutSheet",sx:0,sy:64,sWidth:32,sHeight:32}},{name:"EVIL_PRINTER",width:32,height:32,imageSpec:{id:"printerSheet",sx:0,sy:0,sWidth:32,sHeight:32}}],this.containerX,this.enemyBoxes=this.enemies.map(((t,e)=>({x:this.x+10+e*I.boxSize,y:this.y+I.margin,width:I.boxSize-2*I.margin,height:I.boxSize-2*I.margin,enemy:t}))),this.width=I.boxSize*this.enemyBoxes.length+2*I.scrollBtnWidth,this.isDragging=!1,this.dragObj={}}update(t,e){}draw(t,e){t.drawImage(e.editorUI,85,0,I.scrollBtnWidth,32,this.x,this.y,I.scrollBtnWidth,32),t.fillStyle="black",t.fillRect(this.x+I.scrollBtnWidth,this.y,I.boxSize*this.enemyBoxes.length,I.boxSize);for(const[s,i]of this.enemyBoxes.entries()){const h=s*I.boxSize;t.drawImage(e.editorUI,71,0,3,I.boxSize,this.x+I.scrollBtnWidth+h,this.y,3,I.boxSize);const a=i.enemy.imageSpec;t.drawImage(e[a.id],a.sx,a.sy,a.sWidth,a.sHeight,Math.round(i.x),Math.round(i.y),i.width,i.height),t.drawImage(e.editorUI,68,0,3,I.boxSize,this.x+I.scrollBtnWidth+(s+1)*I.boxSize-3,this.y,3,I.boxSize)}t.translate(this.x+2*I.scrollBtnWidth+I.boxSize*this.enemyBoxes.length,this.y),t.scale(-1,1),t.drawImage(e.editorUI,85,0,6,32,0,0,6,32),t.setTransform(1,0,0,1,0,0)}}class T{static dt=0;static updateStep=1/60;static last=window.performance&&window.performance.now?window.performance.now():(new Date).getTime();constructor(e){const s=document.getElementById("gameCanvas");this.ctx=s.getContext("2d"),this.assets=e,this.input=new t(s),this.editor=new f,this.input.onRelease(t.EDIT,(t=>{this.editor.toggle(),this.currentLevel.reset(this.editor.takeDataSnapshot())})),this.player=new h({x:100,y:this.ctx.canvas.height-h.avatarHeight}),this.currentLevel=new a(this.editor.data,this.assets.levelBG.width,this.ctx.canvas.height,this.player)}start(){window.requestAnimationFrame(this.getAnimationFrameCallback())}update(t){this.editor.enabled?this.editor.update(t,this.input):(this.currentLevel.update(t,this.input),this.player.update(t,this.input,this.currentLevel))}draw(){this.ctx.fillStyle=this.editor.enabled?"green":"gray",this.ctx.fillRect(0,0,this.ctx.canvas.width,this.ctx.canvas.height),this.editor.enabled?this.editor.draw(this.ctx,this.assets):(this.currentLevel.draw(this.ctx,this.assets),this.player.draw(this.ctx,this.assets,this.currentLevel.offset))}getAnimationFrameCallback(){const t=this;return function(e){for(T.dt+=Math.min(1,(e-T.last)/1e3);T.dt>T.updateStep;)T.dt-=T.updateStep,t.update(T.updateStep);t.draw(),T.last=e,window.requestAnimationFrame(t.getAnimationFrameCallback())}}}const S=[{id:"player",path:"images/julhilde.png"},{id:"tile",path:"images/tile.png"},{id:"levelBG",path:"images/background.gif"},{id:"editorUI",path:"images/editorUI.png"},{id:"donutSheet",path:"images/donut.png"},{id:"printerSheet",path:"images/printer.png"}];window.onload=function(){Promise.all(S.map((t=>async function(t){const e=new Image;return e.src=t.path,await e.decode(),[t.id,e]}(t)))).then((t=>{new T(Object.fromEntries(t)).start()}))}})();