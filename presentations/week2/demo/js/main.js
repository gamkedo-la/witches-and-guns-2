(()=>{"use strict";class t{static EDIT="e";constructor(t){this.up=this.down=this.left=this.right=this.shoot=!1,this.edit=!1,this.onReleaseHooks={},this.mousePos={x:null,y:null},this.mouseButtonHeld=!1;const e=this;document.addEventListener("keydown",(t=>e.keyPress(t))),document.addEventListener("keyup",(t=>e.keyRelease(t))),t.addEventListener("mousemove",(t=>e.updateMousePos(t))),t.addEventListener("mousedown",(t=>{e.mouseButtonHeld=!0})),t.addEventListener("mouseup",(t=>{e.mouseButtonHeld=!1}))}flipInputState(t,e){switch(t){case" ":this.shoot=e;break;case"ArrowLeft":this.left=e;break;case"ArrowRight":this.right=e;break;case"ArrowUp":this.up=e;break;case"ArrowDown":this.down=e;break;case"e":this.edit=e}}keyPress(t){t.defaultPrevented||t.repeat||"F12"!=t.key&&(t.preventDefault(),this.flipInputState(t.key,!0))}keyRelease(t){if(!t.defaultPrevented&&"F12"!=t.key){t.preventDefault(),this.flipInputState(t.key,!1);for(const e of this.onReleaseHooks[t.key]||[])e(t)}}onRelease(t,e){void 0===this.onReleaseHooks[t]?this.onReleaseHooks[t]=[e]:this.onReleaseHooks[t].push(e)}updateMousePos(t){const e=t.target.getBoundingClientRect(),s=t.target.width/e.width,i=t.target.height/e.height,h=document.documentElement;this.mousePos.x=s*(t.clientX-e.left-h.scrollLeft),this.mousePos.y=i*(t.clientY-e.top-h.scrollTop)}}class e{static#t=[];static alive=function*(){for(const t of this.#t)t.live&&(yield t)};static spawn(t,s,i,h){let a=this.#t.filter((t=>!t.live)).pop();return void 0===a?(a=new e(t,s,i,h),this.#t.push(a),console.log("Created new enemy",a)):(a.init(t,s,i,h),console.log("Recycled enemy",a)),a}constructor(t,e,s,i){this.init(t,e,s,i)}init(t,e,s,i){this.color=s,this.live=!0,this.startX=this.x=t,this.y=e,this.width=32,this.height=32,this.endX=i,this.velX=20*Math.sign(this.endX-this.startX),this.endXTime=(this.endX-this.startX)/this.velX,this.imageSpec={id:"donutSheet",sx:0,sy:0,sWidth:this.width,sHeight:this.height}}update(t){this.live&&(t<this.endXTime?this.x=this.startX+this.velX*t:this.x=this.endX-this.velX*(t-this.endXTime))}draw(t,e,s){t.drawImage(e[this.imageSpec.id],0,0,this.imageSpec.sWidth,this.imageSpec.sHeight,Math.round(this.x-s),Math.round(this.y),this.width,this.height)}}class s{static#t=[];static get(t,e,i,h,a,o){const n=s.#t.filter((t=>!t.live));if(n.length)return n[0].recycle(t,e,i,h,a,o);{const n=new s(t,e,i,h,a,o);return s.#t.push(n),n}}constructor(t,e,s,i,h,a){this.#e(t,e,s,i,h,a)}update(t){this.position.x+=this.velocity.x*t,this.position.y+=this.velocity.y*t,this.position.y-this.target.height<this.target.y&&(this.live=!1,this.hooks.forEach((e=>e(t,this))))}#e(t,e,s,i,h,a){return this.position=s,this.radius=e,this.target=i,this.velocity={x:t*(this.target.x-this.position.x),y:t*(this.target.y-this.position.y)},this.hooks=a,this.live=!0,this}recycle(t,e,s,i,h,a){return this.#e(t,e,s,i,h,a),this}draw(t,e,s){t.strokeStyle="yellow",t.beginPath();const i={x:this.position.y-4<this.target.y?this.target.x:this.position.x,y:this.position.y-4<this.target.y?this.target.y:this.position.y};t.arc(Math.round(i.x-s),Math.round(i.y),Math.round(this.radius),0,2*Math.PI),t.stroke()}}const i={TIME_SLOT:250,VIEWABLE_WIDTH:426,VIEWABLE_HEIGHT:240,PLAYABLE_WIDTH:800};Object.freeze(i);class h{static avatarHeight=32;static avatarWidth=8;static reticleSpeed=270;static avatarSpeed=120;static timeBetweenShots=1/9;static getAxis=function(t,e,s,i){let h={x:0,y:0};return t?h.y+=-1:e&&(h.y+=1),s?h.x+=-1:i&&(h.x+=1),h};static clampNorm=function(t,e){const s=Math.sqrt(Math.pow(t.x,2)+Math.pow(t.y,2)),i=Math.min(s,e)/s;return{x:i*t.x,y:i*t.y}};static onHitTarget=function(t,s){for(const t of e.alive())Math.sqrt(Math.pow(t.x+t.width/2-s.target.x,2)+Math.pow(t.y+t.height/2-s.target.y,2))<=16&&(t.live=!1)};constructor(t){this.avatarPos={x:100,y:t.y},this.reticlePos={x:t.x+4,y:t.y-100},this.shots=[],this.shotDelay=0,this.hitTargetHooks=[h.onHitTarget],this.isShooting=!1}update(t,e,a){this.shots=this.shots.filter((t=>t.live)),e.shoot?this.shotDelay<=0&&(this.isShooting=!0,this.shots.push(s.get(8,h.avatarWidth/2,{x:this.avatarPos.x+h.avatarWidth/2,y:this.avatarPos.y},{x:this.reticlePos.x,y:this.reticlePos.y,height:3},10,this.hitTargetHooks)),this.shotDelay=h.timeBetweenShots):(e.left&&(this.avatarPos.x=Math.max(0,this.avatarPos.x-h.avatarSpeed*t)),e.right&&(this.avatarPos.x=Math.min(a.width-h.avatarWidth,this.avatarPos.x+h.avatarSpeed*t)),this.isShooting=!1),this.shots.forEach((e=>e.update(t))),this.shotDelay-=t;const o=h.getAxis(e.up,e.down,e.left,e.right);if(0!==o.x||0!==o.y){const e=h.clampNorm({x:o.x*h.reticleSpeed,y:o.y*h.reticleSpeed},h.reticleSpeed);this.reticlePos.x+=e.x*t,this.reticlePos.y+=e.y*t}const n=this.avatarPos.x-a.offset;n>i.VIEWABLE_WIDTH*(2/3)&&a.scrollRight(t),n<i.VIEWABLE_WIDTH/3&&a.scrollLeft(t),this.reticlePos.x<a.offset+h.avatarWidth/2&&(this.reticlePos.x=a.offset+h.avatarWidth/2),this.reticlePos.x>a.offset+i.VIEWABLE_WIDTH-h.avatarWidth/2&&(this.reticlePos.x=a.offset+i.VIEWABLE_WIDTH-h.avatarWidth/2),this.reticlePos.y<h.avatarWidth/2&&(this.reticlePos.y=h.avatarWidth/2),this.reticlePos.y>i.VIEWABLE_HEIGHT-h.avatarHeight&&(this.reticlePos.y=i.VIEWABLE_HEIGHT-h.avatarHeight)}draw(t,e,s){t.strokeStyle=this.isShooting?"lime":"red",t.beginPath(),t.arc(Math.round(this.reticlePos.x-s),Math.round(this.reticlePos.y),Math.round(h.avatarWidth),0,2*Math.PI),t.stroke(),t.drawImage(e.player,50,0,20,32,Math.round(this.avatarPos.x-s),Math.round(this.avatarPos.y),20,32),this.shots.forEach((i=>i.draw(t,e,s)))}}class a{static gridWidth=25;static gridHeight=10;static tileSize=16;static#s=0;static#i=256;static getXForGridIndex(t){return t%a.gridWidth}static getYForGridIndex(t){return Math.floor(t/a.gridWidth)}constructor(t,e,s){const i=document.createElement("canvas");this.tilesCtx=i.getContext("2d"),this.levelData=t,this.waveIndex=0,this.width=e,this.offset=0,this.tiles=Array.of(a.gridWidth*a.gridHeight),this.tiles.fill({}),this.enemyClock=0}reset(){this.enemyClock=0,this.waveIndex=0,this.offset=0}scrollLeft(t){this.offset=Math.max(0,this.offset-a.#i*t)}scrollRight(t){this.offset=Math.min(this.offset+a.#i*t,this.width-i.VIEWABLE_WIDTH)}update(t){if(a.#s+=t,1e3*a.#s>i.TIME_SLOT){a.#s=0;const t=this.levelData[this.waveIndex++];if(void 0!==t){for(let s=0;s<t.length;s++){const i=t[s];e.spawn(i.x,i.y,i.color,i.endX)}console.log("Time for a new wave!",this.waveIndex)}this.waveIndex=this.waveIndex%this.levelData.length}this.enemyClock+=t;for(const t of e.alive())t.update(this.enemyClock),(t.x+t.width<0||t.x>this.width)&&(t.live=!1)}draw(t,s){t.drawImage(s.levelBG,Math.round(this.offset),0,t.canvas.width,t.canvas.height,0,0,t.canvas.width,t.canvas.height);for(const i of e.alive())i.draw(t,s,this.offset)}}class o{constructor(t,e,s,i,h,a,o){this.x=t,this.y=e,this.width=s,this.height=i,this.spriteOffsetX=h,this.spriteOffsetY=a,this.mouseBtnWasHeld=!1,this.flipSprite=o||!1}onClick(t){this.action=t}update(t,e){const s=x(e.mousePos,{x:this.x,y:this.y,width:this.width,height:this.height});s&&!e.mouseButtonHeld&&this.mouseBtnWasHeld&&this.action(),this.mouseBtnWasHeld=s&&e.mouseButtonHeld}draw(t,e){if(this.flipSprite?(t.translate(this.x+this.width,this.y),t.scale(-1,1),t.drawImage(e.editorUI,this.spriteOffsetX,this.spriteOffsetY,this.width,this.height,0,0,this.width,this.height),t.setTransform(1,0,0,1,0,0)):t.drawImage(e.editorUI,this.spriteOffsetX,this.spriteOffsetY,this.width,this.height,this.x,this.y,this.width,this.height),this.mouseBtnWasHeld){const e=t.globalAlpha;t.globalAlpha=.3,t.fillStyle="white",t.fillRect(this.x+1,this.y+1,this.width-2,this.height-2),t.globalAlpha=e}}}class n extends o{static WIDTH=17;static HEIGHT=17;constructor(t,e,s,i,h){super(Math.floor(i/2)*n.WIDTH,i%2*n.HEIGHT+h,n.WIDTH,n.HEIGHT,e,s,!1),this.editor=t,this.order=i}action(){console.log("CLICKED",this)}}class r extends n{constructor(t,e,s){super(t,0,0,e,s)}action(){this.editor.toggle()}}class d extends n{constructor(t,e,s){super(t,n.WIDTH,0,e,s)}}class l extends n{constructor(t,e,s){super(t,2*n.WIDTH,0,e,s)}}class c extends n{constructor(t,e,s){super(t,3*n.WIDTH,0,e,s)}}class g extends n{constructor(t,e,s){super(t,0,n.HEIGHT,e,s)}}class m extends n{constructor(t,e,s){super(t,n.WIDTH,n.HEIGHT,e,s)}}class u extends n{constructor(t,e,s){super(t,2*n.WIDTH,n.HEIGHT,e,s)}action(){this.editor.deleteSelected()}}class y extends n{constructor(t,e,s){super(t,3*n.WIDTH,n.HEIGHT,e,s)}}class f{static buttonSpecs=[r,g,d,m,l,u,c,y];static WP_HANDLE_SIZE=6;constructor(){this.enabled=!0,this.components={timeSlider:new E(this),enemyPalette:new w(this,n.WIDTH*f.buttonSpecs.length/2,184+E.HEIGHT),stageSlider:new p(this)};const t=this.components.timeSlider.y+E.HEIGHT,e=this;this.buttons=f.buttonSpecs.map(((s,i)=>new s(e,i,t))),this.dragObj={},this.dragWP={},this.isDragging=!1,this.isDraggingWP=!1,this.data=Array(Math.ceil(E.MAX_TIME/i.TIME_SLOT)),this.stageOffset=0,this.dragOffset={x:0,y:0},this.selectedEnemy=null,this.simEnemies=[]}scrollRight(t){this.stageOffset+=t,this.stageOffset=Math.min(this.stageOffset,i.PLAYABLE_WIDTH)}scrollLeft(t){this.stageOffset-=t,this.stageOffset=Math.max(this.stageOffset,0)}update(t,e){const s=e.mousePos.x,h=e.mousePos.y;if(!this.isDragging&&!this.isDraggingWP&&e.mouseButtonHeld&&(h<this.components.timeSlider.y||h>this.components.timeSlider.y+E.HEIGHT))if(s>this.components.enemyPalette.x&&s<this.components.enemyPalette.x+this.components.enemyPalette.width&&h>this.components.enemyPalette.y&&h<this.components.enemyPalette.y+this.components.enemyPalette.height){for(const t of this.components.enemyPalette.enemyBoxes)if(s>t.x&&s<t.x+t.width&&h>t.y&&h<t.y+t.height){this.isDragging=!0,this.dragObj={x:t.x,y:t.y,width:t.enemy.width,height:t.enemy.height,enemy:Object.assign({},t.enemy)},this.dragOffset.x=this.dragObj.x-s,this.dragOffset.y=this.dragObj.y-h;break}}else{const t=this.getEnemiesForTime();for(const[i,a]of t.entries()){const o={x:a.endX?a.endX:a.x+a.width/2-f.WP_HANDLE_SIZE/2,y:a.y+a.height/2-f.WP_HANDLE_SIZE/2,width:f.WP_HANDLE_SIZE,height:f.WP_HANDLE_SIZE};if(x(e.mousePos,o)){this.isDraggingWP=!0,Object.assign(this.dragWP,{enemy:a,start:{x:a.x+a.width/2,y:a.y+a.height/2},end:{x:s,y:a.y+a.height/2}}),t.splice(i,1);break}if(x(e.mousePos,a)){this.isDragging=!0,Object.assign(this.dragObj,{x:a.x,y:a.y,width:a.width,height:a.height,enemy:a,endX:a.x+a.width}),this.dragOffset.x=this.dragObj.x-s,this.dragOffset.y=this.dragObj.y-h,t.splice(i,1);break}}}for(const s of Object.values(this.components))s.update(t,e);for(const[s,i]of this.buttons.entries())i.update(t,e);this.isDraggingWP?e.mouseButtonHeld?this.dragWP.end.x=e.mousePos.x:(this.isDraggingWP=!1,this.dragWP.end.x>0&&this.dragWP.end.x<i.VIEWABLE_WIDTH&&(this.dragWP.enemy.endX=this.dragWP.end.x,this.dropEnemy(this.dragWP.enemy))):this.isDragging&&(e.mouseButtonHeld?(this.dragObj.x=e.mousePos.x+this.dragOffset.x,this.dragObj.y=e.mousePos.y+this.dragOffset.y,this.dragObj.enemy.x=this.dragObj.x,this.dragObj.enemy.y=this.dragObj.y):(this.isDragging=!1,this.dragObj.x>0&&this.dragObj.x+this.dragObj.width<this.components.enemyPalette.containerX&&this.dragObj.y<this.components.timeSlider.y&&(this.dragObj.enemy.x=this.dragObj.x,this.dragObj.enemy.y=this.dragObj.y,this.dragObj.enemy.width=this.dragObj.width,this.dragObj.enemy.height=this.dragObj.height,this.dragObj.enemy.alive=!0,this.dropEnemy(this.dragObj.enemy))))}updateSimEnemies(t){this.simEnemies=[];for(let s=0;s<this.data.length;s++){const h=this.data[s];if(s>=t||void 0===h)continue;const a=(t-s)*i.TIME_SLOT;for(const t of h){const s=e.spawn(t.x,t.y,t.color,t.endX);s.update(a/1e3),this.simEnemies.push(s)}}}getTimeIndex(){return this.components.timeSlider.sliderPos}dropEnemy(t){const e=this.getTimeIndex();void 0===this.data[e]&&(this.data[e]=[]),this.data[e].push(t),this.selectedEnemy={enemy:t,index:e,subindex:this.data[e].length-1},console.log("DATA UPDATED",this.data)}getEnemiesForTime(){return this.data[this.getTimeIndex()]||[]}drawEnemy(t,e,s){const i=t.imageSpec;e.drawImage(s[i.id],i.sx,i.sy,i.sWidth,i.sHeight,Math.round(t.x-this.stageOffset),Math.round(t.y),t.width,t.height)}draw(t,e){t.drawImage(e.levelBG,this.stageOffset,0,t.canvas.width,t.canvas.height,0,0,t.canvas.width,t.canvas.height);for(const s of Object.values(this.components))s.draw(t,e);for(const s of this.getEnemiesForTime()){this.drawEnemy(s,t,e);const i=s.y+s.height/2;s.endX?(t.strokeStyle="yellow",t.beginPath(),t.moveTo(Math.round(s.x-this.stageOffset+s.width/2),Math.round(s.y+s.height/2)),t.lineTo(Math.round(s.endX-this.stageOffset),Math.round(i)),t.stroke(),t.strokeStyle="cyan",t.strokeRect(Math.round(s.endX-this.stageOffset-f.WP_HANDLE_SIZE/2),Math.round(i-f.WP_HANDLE_SIZE/2),f.WP_HANDLE_SIZE,f.WP_HANDLE_SIZE)):t.strokeRect(Math.round(s.x-this.stageOffset+s.width/2-f.WP_HANDLE_SIZE/2),Math.round(i-f.WP_HANDLE_SIZE/2),f.WP_HANDLE_SIZE,f.WP_HANDLE_SIZE)}const s=this.getTimeIndex(),i=t.globalAlpha;t.globalAlpha=.3;for(const s of this.simEnemies)this.drawEnemy(s,t,e);if(t.globalAlpha=i,this.isDraggingWP&&(t.strokeStyle="red",t.beginPath(),t.moveTo(this.dragWP.start.x,this.dragWP.start.y),t.lineTo(this.dragWP.end.x,this.dragWP.end.y),t.stroke()),this.isDragging){t.fillStyle=this.dragObj.enemy.color;const s=t.globalAlpha;t.globalAlpha=.5,this.drawEnemy(this.dragObj.enemy,t,e),t.globalAlpha=s}for(const[s,i]of this.buttons.entries())i.draw(t,e,this.components.timeSlider.y+E.HEIGHT,s);null!==this.selectedEnemy&&s===this.selectedEnemy.index&&(t.setLineDash([2,3]),t.strokeStyle="lime",t.strokeRect(Math.round(this.selectedEnemy.enemy.x-this.stageOffset),Math.round(this.selectedEnemy.enemy.y),this.selectedEnemy.enemy.width,this.selectedEnemy.enemy.height),t.setLineDash([]))}toggle(){this.enabled=!this.enabled}deleteSelected(){null!==this.selectedEnemy&&this.getTimeIndex()===this.selectedEnemy.index&&(this.data[this.selectedEnemy.index].splice(this.selectedEnemy.subindex,1),this.selectedEnemy=null)}}function x(t,e){return t.x>e.x&&t.y>e.y&&t.x<e.x+e.width&&t.y<e.y+e.height}class p{static btnSize=11;constructor(t){this.editor=t,this.slidePos=0,this.leftBtn={x:0,y:i.VIEWABLE_HEIGHT-p.btnSize,width:p.btnSize,height:p.btnSize},this.rightBtn={x:i.VIEWABLE_WIDTH-p.btnSize,y:i.VIEWABLE_HEIGHT-p.btnSize,width:p.btnSize,height:p.btnSize},this.mouseHeldOnLeftBtn=!1,this.mouseHeldOnRightBtn=!1}update(t,e){const s=x(e.mousePos,this.leftBtn);s&&!e.mouseButtonHeld&&this.mouseHeldOnLeftBtn&&this.editor.scrollLeft(20),this.mouseHeldOnLeftBtn=s&&e.mouseButtonHeld;const i=x(e.mousePos,this.rightBtn);i&&!e.mouseButtonHeld&&this.mouseHeldOnRightBtn&&this.editor.scrollRight(20),this.mouseHeldOnRightBtn=i&&e.mouseButtonHeld}draw(t,e){const s=t.canvas.height-p.btnSize;t.drawImage(e.editorUI,74,0,p.btnSize,p.btnSize,0,s,p.btnSize,p.btnSize),t.translate(t.canvas.width,s),t.scale(-1,1),t.drawImage(e.editorUI,74,0,p.btnSize,p.btnSize,0,0,p.btnSize,p.btnSize),t.setTransform(1,0,0,1,0,0)}}class E{static SPEED=2;static MAX_TIME=1e5;static HEIGHT=12;static BTN_WIDTH=7;static TIME_STEP=250;constructor(t){this.editor=t,this.sliderPos=0,this.containerY=240-E.HEIGHT,this.y=184,this.isDragging=!1,this.maxPos=(i.VIEWABLE_WIDTH-E.BTN_WIDTH)/2,this.leftBtn=new o(0,this.y,E.BTN_WIDTH,E.HEIGHT,74,20),this.leftBtn.onClick((()=>this.stepLeft())),this.rightBtn=new o(i.VIEWABLE_WIDTH-E.BTN_WIDTH,this.y,E.BTN_WIDTH,E.HEIGHT,74,20,!0),this.rightBtn.onClick((()=>this.stepRight()))}getSelectedTime(){return this.sliderPos*E.TIME_STEP}updateSliderPos(t){this.sliderPos=t,console.log("Changed time slider position",this.sliderPos,"TIME:",this.getSelectedTime()),this.editor.updateSimEnemies(this.sliderPos)}stepLeft(){this.updateSliderPos(Math.max(0,this.sliderPos-1))}stepRight(){this.updateSliderPos(Math.min(this.maxPos,this.sliderPos+1))}screenPosToSliderPos(t){return Math.min(E.MAX_TIME/E.TIME_STEP,Math.max(0,Math.floor((t-E.BTN_WIDTH)/2)))}update(t,e){this.editor.isDragging||(this.leftBtn.update(t,e),this.rightBtn.update(t,e),e.left&&this.stepLeft(),e.right&&this.stepRight(),e.mouseButtonHeld&&e.mousePos.y>=this.y&&e.mousePos.y<=this.y+E.HEIGHT&&e.mousePos.x>E.BTN_WIDTH&&e.mousePos.x<i.VIEWABLE_WIDTH-E.BTN_WIDTH?(this.updateSliderPos(this.screenPosToSliderPos(e.mousePos.x)),this.isDragging=!0):!e.mouseButtonHeld&&this.isDragging&&(this.isDragging=!1,this.updateSliderPos(this.screenPosToSliderPos(e.mousePos.x))))}draw(t,e){this.leftBtn.draw(t,e);for(let s=7;s<t.canvas.width-E.BTN_WIDTH;s+=2)t.drawImage(e.editorUI,81,20,2,E.HEIGHT,s,this.y,2,E.HEIGHT);this.rightBtn.draw(t,e),t.fillStyle="yellow",t.fillRect(Math.floor(2*this.sliderPos)+E.BTN_WIDTH,this.y+2,1,6)}}class w{static margin=4;static boxSize=32;static scrollBtnWidth=6;constructor(t,e,s){this.editor=t,this.x=e,this.y=s,this.containerX=394,this.height=216,this.enemies=[{name:"RASPBERRY_DONUT",width:32,height:32,imageSpec:{id:"donutSheet",sx:0,sy:0,sWidth:32,sHeight:32}},{name:"CHOCO_DONUT",width:32,height:32,imageSpec:{id:"donutSheet",sx:0,sy:32,sWidth:32,sHeight:32}},{name:"FROSTED_DONUT",width:32,height:32,imageSpec:{id:"donutSheet",sx:0,sy:64,sWidth:32,sHeight:32}}],this.containerX,this.enemyBoxes=this.enemies.map(((t,e)=>({x:this.x+10+e*w.boxSize,y:this.y+w.margin,width:w.boxSize-2*w.margin,height:w.boxSize-2*w.margin,enemy:t}))),this.width=w.boxSize*this.enemyBoxes.length+2*w.scrollBtnWidth,this.isDragging=!1,this.dragObj={}}update(t,e){}draw(t,e){t.drawImage(e.editorUI,85,0,w.scrollBtnWidth,32,this.x,this.y,w.scrollBtnWidth,32),t.fillStyle="black",t.fillRect(this.x+w.scrollBtnWidth,this.y,w.boxSize*this.enemyBoxes.length,w.boxSize);for(const[s,i]of this.enemyBoxes.entries()){const h=s*w.boxSize;t.drawImage(e.editorUI,71,0,3,w.boxSize,this.x+w.scrollBtnWidth+h,this.y,3,w.boxSize);const a=i.enemy.imageSpec;t.drawImage(e[a.id],a.sx,a.sy,a.sWidth,a.sHeight,Math.round(i.x),Math.round(i.y),i.width,i.height),t.drawImage(e.editorUI,68,0,3,w.boxSize,this.x+w.scrollBtnWidth+(s+1)*w.boxSize-3,this.y,3,w.boxSize)}t.translate(this.x+2*w.scrollBtnWidth+w.boxSize*this.enemyBoxes.length,this.y),t.scale(-1,1),t.drawImage(e.editorUI,85,0,6,32,0,0,6,32),t.setTransform(1,0,0,1,0,0)}}class I{static dt=0;static updateStep=1/60;static last=window.performance&&window.performance.now?window.performance.now():(new Date).getTime();constructor(e){const s=document.getElementById("gameCanvas");this.ctx=s.getContext("2d"),this.assets=e,this.input=new t(s),this.editor=new f,this.input.onRelease(t.EDIT,(t=>{this.editor.toggle(),this.currentLevel.reset()})),this.player=new h({x:100,y:this.ctx.canvas.height-h.avatarHeight}),this.currentLevel=new a(this.editor.data,this.assets.levelBG.width,this.ctx.canvas.height)}start(){window.requestAnimationFrame(this.getAnimationFrameCallback())}update(t){this.editor.enabled?this.editor.update(t,this.input):(this.currentLevel.update(t,this.input),this.player.update(t,this.input,this.currentLevel))}draw(){this.ctx.fillStyle=this.editor.enabled?"green":"gray",this.ctx.fillRect(0,0,this.ctx.canvas.width,this.ctx.canvas.height),this.editor.enabled?this.editor.draw(this.ctx,this.assets):(this.currentLevel.draw(this.ctx,this.assets),this.player.draw(this.ctx,this.assets,this.currentLevel.offset))}getAnimationFrameCallback(){const t=this;return function(e){for(I.dt+=Math.min(1,(e-I.last)/1e3);I.dt>I.updateStep;)I.dt-=I.updateStep,t.update(I.updateStep);t.draw(),I.last=e,window.requestAnimationFrame(t.getAnimationFrameCallback())}}}const S=[{id:"player",path:"images/julhilde.png"},{id:"tile",path:"images/tile.png"},{id:"levelBG",path:"images/background.gif"},{id:"editorUI",path:"images/editorUI.png"},{id:"donutSheet",path:"images/donut.png"}];window.onload=function(){Promise.all(S.map((t=>async function(t){const e=new Image;return e.src=t.path,await e.decode(),[t.id,e]}(t)))).then((t=>{new I(Object.fromEntries(t)).start()}))}})();